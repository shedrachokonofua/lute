FROM --platform=amd64 rust:1.77-bookworm as builder
WORKDIR /usr/src/app

# setup protobuf compile
RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip && \
  unzip protoc-3.17.3-linux-x86_64.zip -d protoc3 && \
  mv protoc3/bin/* /usr/local/bin/ && \
  mv protoc3/include/* /usr/local/include/ && \
  rm -rf protoc3 protoc-3.17.3-linux-x86_64.zip

COPY core core
COPY proto proto

ENV OPENSSL_VER=1.1.1i
ENV PREFIX=/usr/aarch64-linux
ENV PATH=/usr/local/bin:$PATH
ENV PKG=CONFIG_PATH=/usr/local/lib/pkgconfig
ENV CC=aarch64-linux-gnu-gcc
ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
ENV SSL_CERT_DIR=/etc/ssl/certs
ENV OPENSSL_LIB_DIR=$PREFIX/lib
ENV OPENSSL_INCLUDE_DIR=$PREFIX/include
ENV OPENSSL_DIR=$PREFIX
ENV OPENSSL_STATIC=1
ENV PKG_CONFIG_ALLOW_CROSS=1
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
ENV CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
ENV CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
ENV CARGO_INCREMENTAL=0

# setup aarch c/c++ compiler 
RUN apt-get -y update && apt-get install -y \
  gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross

# compile openssl 
RUN  curl -L http://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz | tar xz && \
  cd openssl-$OPENSSL_VER && \
  ./Configure no-shared --prefix=$PREFIX --openssldir=$PREFIX/ssl no-zlib linux-aarch64 -fPIC && \
  make -j$(nproc) && make install && cd .. && rm -rf openssl-$OPENSSL_VER && \
  rm -rf /var/lib/apt/lists/*

RUN rustup target add aarch64-unknown-linux-gnu && \
  rustup toolchain install stable-aarch64-unknown-linux-gnu && \
  cargo install --path lute --target aarch64-unknown-linux-gnu

FROM --platform=linux/arm64 debian:bookworm-slim
RUN apt-get update
RUN apt-get install ca-certificates -y
RUN update-ca-certificates
RUN rm -rf /var/lib/apt/lists/*
COPY --from=builder /usr/local/cargo/bin/lute /usr/local/bin/lute
CMD ["lute"]
